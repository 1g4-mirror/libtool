#! /bin/sh
# quote.test - make sure that shell metacharacters do not blow up libtool

# Test script header.
need_prefix=no
if test -z "$srcdir"; then
  srcdir=`echo "$0" | sed 's%/[^/]*$%%'`
  test "$srcdir" = "$0" && srcdir=.
  test "${VERBOSE+set}" != "set" && VERBOSE=yes
fi
. $srcdir/defs || exit 1

# Do the torture test.
status=0

echo=echo
if test "X`$echo '\t'`" = 'X\t'; then :
else
  # The Solaris and AIX default echo program unquotes backslashes.
  # This makes it impossible to quote backslashes using
  #   echo "$something" | sed 's/\\/\\\\/g'
  # So, we emulate echo with printf '%s\n'
  echo='printf %s\n'
  if test "X`$echo '\t'`" = 'X\t'; then :
  else
    # Oops.  We have no working printf.  Try to find a not-so-buggy echo.
    echo=echo
    IFS="${IFS= 	}"; save_ifs="$IFS"; IFS="${IFS}:"
    save_PATH="$PATH"
    PATH="$PATH":/usr/ucb
    for dir in $PATH; do
      if test -f $dir/echo && test X`$dir/echo '\t'` = 'X\t'; then
        echo="$dir/echo"
        break
      fi
    done
    IFS="$save_ifs"
    PATH="$save_PATH"
  fi
fi

for mode in compile link install; do
  $echo "== $mode mode"

  # Unfortunately, without an array data type, it is nearly impossible
  # to protect libtool from metacharacters in filenames.  So, we just
  # try metacharacters in the options it needs to pass to other programs.

  # preargs and postargs need to go through libtool unmodified.
  case "$mode" in
  compile)
    preargs="gcc -c"
    flag="-DVAR="
    postargs="foo.c"
    ;;

  link)
    preargs="gcc -o hell -g -O"
    flag="-Wl,-someflag="
    postargs="foo.o"
    ;;

  install)
    preargs="install -c"
    flag="--something="
    postargs="hell /usr/local/bin/hell"
    ;;
  esac

  # Trivial.
  $echo "= trying: no quoting"
  result=`$libtool -n --mode=$mode $preargs "${flag}test" $postargs` || status=1
  case "$result" in
  *"$preargs ${flag}test "*)
    $echo "= passed: $result"
    ;;
  *)
    $echo "= failed: $result"
    status=1
    ;;
  esac

  # Metacharacters that should be backslashified.
  for mchar in \\ \" \` \$; do
    $echo "= trying: \\$mchar quoting"
    result=`$libtool -n --mode=$mode $preargs "${flag}${mchar}test${mchar}" $postargs` || status=1
    case "$result" in
    *"$preargs ${flag}\\${mchar}test\\${mchar} "*)
      $echo "= passed: $result"
      ;;
    *)
      $echo "= failed: $result"
      status=1
      ;;
    esac
  done

  # Metacharacters that should be double quoted.
  for mchar in "[" "]" "~" "#" "^" "&" "*" "(" ")" "{" "}" "|" ";" "<" ">" "?" \
      "'" " " "	"; do

    $echo "= trying: \"$mchar\" quoting"
    result=`$libtool -n --mode=$mode $preargs "${flag}${mchar}test${mchar}" $postargs` || status=1
    case "$result" in
    *"$preargs \"${flag}${mchar}test${mchar}\" "*)
      $echo "= passed: $result"
      ;;
    *)
      $echo "= failed: $result"
      status=1
      ;;
    esac
  done
done

exit $status
